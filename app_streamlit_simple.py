import streamlit as st
import json
import numpy as np
from datetime import datetime
import time

# Configure page
st.set_page_config(
    page_title="üáßüá∑ Cidad√£oGPT - An√°lise de Transpar√™ncia",
    page_icon="üîç",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS styling
st.markdown("""
<style>
    .main-header {
        font-size: 2.5rem;
        color: #1f77b4;
        text-align: center;
        margin-bottom: 2rem;
    }
    .metric-card {
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        padding: 1rem;
        border-radius: 10px;
        color: white;
        text-align: center;
        margin: 0.5rem 0;
    }
    .alert-high {
        background-color: #ff4444;
        color: white;
        padding: 10px;
        border-radius: 5px;
        margin: 10px 0;
    }
    .alert-medium {
        background-color: #ffaa00;
        color: white;
        padding: 10px;
        border-radius: 5px;
        margin: 10px 0;
    }
    .alert-low {
        background-color: #00aa00;
        color: white;
        padding: 10px;
        border-radius: 5px;
        margin: 10px 0;
    }
</style>
""", unsafe_allow_html=True)

def analyze_text_mock(text: str):
    """Mock analysis function - replace with real model when available"""
    # Simulate analysis based on text content
    np.random.seed(hash(text) % 2**32)
    
    # Keywords that trigger different classifications
    suspicious_keywords = ["emergencial", "dispensa", "urg√™ncia", "sem licita√ß√£o", "direto"]
    high_risk_keywords = ["milh√µes", "elevado", "acima do mercado", "superfaturamento"]
    compliance_keywords = ["licita√ß√£o", "preg√£o", "transpar√™ncia", "regular"]
    
    text_lower = text.lower()
    
    # Count suspicious indicators
    suspicious_count = sum(1 for keyword in suspicious_keywords if keyword in text_lower)
    risk_count = sum(1 for keyword in high_risk_keywords if keyword in text_lower)
    compliance_count = sum(1 for keyword in compliance_keywords if keyword in text_lower)
    
    # Determine anomaly level
    if suspicious_count >= 2 or "emergencial" in text_lower and "milh√µes" in text_lower:
        anomaly_class = "An√¥malo"
        anomaly_conf = 0.75 + np.random.rand() * 0.2
    elif suspicious_count >= 1:
        anomaly_class = "Suspeito"
        anomaly_conf = 0.5 + np.random.rand() * 0.3
    else:
        anomaly_class = "Normal"
        anomaly_conf = 0.7 + np.random.rand() * 0.3
    
    # Determine financial risk
    if risk_count >= 2 or "milh√µes" in text_lower:
        risk_level = "Alto"
        risk_conf = 0.7 + np.random.rand() * 0.2
    elif risk_count >= 1:
        risk_level = "M√©dio"
        risk_conf = 0.5 + np.random.rand() * 0.3
    else:
        risk_level = "Baixo"
        risk_conf = 0.6 + np.random.rand() * 0.3
    
    # Determine compliance
    if compliance_count >= 2:
        compliance_status = "Conforme"
        compliance_conf = 0.7 + np.random.rand() * 0.3
    else:
        compliance_status = "N√£o Conforme"
        compliance_conf = 0.6 + np.random.rand() * 0.3
    
    return {
        "anomalia": {
            "classificacao": anomaly_class,
            "confianca": anomaly_conf
        },
        "risco_financeiro": {
            "nivel": risk_level,
            "confianca": risk_conf
        },
        "conformidade": {
            "status": compliance_status,
            "confianca": compliance_conf
        }
    }

def main():
    # Header
    st.markdown('<h1 class="main-header">üáßüá∑ Cidad√£oGPT</h1>', unsafe_allow_html=True)
    st.markdown('<p style="text-align: center; font-size: 1.2rem; color: #666;">An√°lise Inteligente de Transpar√™ncia P√∫blica Brasileira</p>', unsafe_allow_html=True)
    
    # Sidebar
    with st.sidebar:
        st.markdown("### üìä Sobre o Sistema")
        st.info("""
        **Cidad√£oGPT** √© um sistema de IA especializado em an√°lise de transpar√™ncia p√∫blica, 
        desenvolvido para detectar anomalias, avaliar riscos financeiros e verificar conformidade 
        em documentos governamentais brasileiros.
        """)
        
        st.markdown("### üéØ Capacidades")
        st.markdown("""
        - üîç **Detec√ß√£o de Anomalias**
        - üí∞ **An√°lise de Risco Financeiro**
        - ‚öñÔ∏è **Verifica√ß√£o de Conformidade**
        - üìà **Explicabilidade dos Resultados**
        """)
        
        st.markdown("### üìö Casos de Uso")
        st.markdown("""
        - Jornalismo investigativo
        - Auditoria governamental
        - Controle social
        - Compliance p√∫blico
        """)
        
        st.markdown("---")
        st.markdown("### ‚ö†Ô∏è Demonstra√ß√£o")
        st.warning("Esta √© uma vers√£o de demonstra√ß√£o. O modelo completo est√° em desenvolvimento.")
    
    # Main interface
    st.markdown("### üìù An√°lise de Documento")
    
    # Example texts
    examples = {
        "Contrato Suspeito": """Contrato emergencial no valor de R$ 25.000.000,00 para aquisi√ß√£o de equipamentos m√©dicos dispensando licita√ß√£o devido √† pandemia. Fornecedor: Empresa XYZ LTDA criada em 01/03/2020. Prazo de entrega: 7 dias. Valor unit√°rio 300% acima da m√©dia de mercado.""",
        "Despesa Normal": """Despesa com material de escrit√≥rio no valor de R$ 15.000,00 atrav√©s de licita√ß√£o p√∫blica n¬∫ 001/2024. Fornecedor: Papelaria Central LTDA. Itens: papel A4, canetas, grampeadores conforme especifica√ß√£o t√©cnica. Entrega em 15 dias √∫teis.""",
        "Licita√ß√£o Irregular": """Licita√ß√£o para servi√ßos de consultoria em TI no valor de R$ 5.000.000,00 com apenas 2 dias para apresenta√ß√£o de propostas. Especifica√ß√£o t√©cnica direcionada para empresa espec√≠fica."""
    }
    
    # Text input
    selected_example = st.selectbox("Escolha um exemplo ou digite seu pr√≥prio texto:", ["Texto Personalizado"] + list(examples.keys()))
    
    if selected_example == "Texto Personalizado":
        text_input = st.text_area(
            "Digite ou cole o texto do documento p√∫blico para an√°lise:",
            height=200,
            placeholder="Exemplo: Contrato emergencial no valor de R$ 25.000.000,00 para aquisi√ß√£o de equipamentos..."
        )
    else:
        text_input = st.text_area(
            "Texto selecionado:",
            value=examples[selected_example],
            height=200
        )
    
    # Analysis button
    if st.button("üîç Analisar Documento", type="primary", use_container_width=True):
        if text_input.strip():
            with st.spinner("ü§ñ Analisando documento..."):
                # Simulate processing time
                progress_bar = st.progress(0)
                for i in range(100):
                    time.sleep(0.01)
                    progress_bar.progress(i + 1)
                
                # Get results
                results = analyze_text_mock(text_input)
            
            # Display results
            st.markdown("---")
            st.markdown("### üìä Resultados da An√°lise")
            
            col1, col2, col3 = st.columns(3)
            
            with col1:
                st.markdown(f"""
                <div class="metric-card">
                    <h3>üîç Anomalia</h3>
                    <h2>{results['anomalia']['classificacao']}</h2>
                    <p>{results['anomalia']['confianca']:.1%} confian√ßa</p>
                </div>
                """, unsafe_allow_html=True)
            
            with col2:
                st.markdown(f"""
                <div class="metric-card">
                    <h3>üí∞ Risco Financeiro</h3>
                    <h2>{results['risco_financeiro']['nivel']}</h2>
                    <p>{results['risco_financeiro']['confianca']:.1%} confian√ßa</p>
                </div>
                """, unsafe_allow_html=True)
            
            with col3:
                st.markdown(f"""
                <div class="metric-card">
                    <h3>‚öñÔ∏è Conformidade</h3>
                    <h2>{results['conformidade']['status']}</h2>
                    <p>{results['conformidade']['confianca']:.1%} confian√ßa</p>
                </div>
                """, unsafe_allow_html=True)
            
            # Alerts
            st.markdown("### üö® Alertas e Recomenda√ß√µes")
            
            # Anomaly alert
            if results['anomalia']['classificacao'] == "An√¥malo":
                st.markdown("""
                <div class="alert-high">
                    üö® <strong>ANOMALIA DETECTADA</strong><br>
                    Este documento apresenta caracter√≠sticas an√¥malas que requerem investiga√ß√£o detalhada.
                </div>
                """, unsafe_allow_html=True)
            elif results['anomalia']['classificacao'] == "Suspeito":
                st.markdown("""
                <div class="alert-medium">
                    ‚ö†Ô∏è <strong>DOCUMENTO SUSPEITO</strong><br>
                    Este documento apresenta algumas caracter√≠sticas que merecem aten√ß√£o.
                </div>
                """, unsafe_allow_html=True)
            else:
                st.markdown("""
                <div class="alert-low">
                    ‚úÖ <strong>DOCUMENTO NORMAL</strong><br>
                    Este documento n√£o apresenta anomalias significativas.
                </div>
                """, unsafe_allow_html=True)
            
            # Risk alert
            if results['risco_financeiro']['nivel'] == "Alto":
                st.markdown("""
                <div class="alert-high">
                    üí∞ <strong>ALTO RISCO FINANCEIRO</strong><br>
                    Esta transa√ß√£o apresenta caracter√≠sticas de alto risco financeiro.
                </div>
                """, unsafe_allow_html=True)
            
            # JSON results
            with st.expander("üîß Resultados T√©cnicos (JSON)"):
                st.json(results)
            
            # Analysis details
            with st.expander("üìã Detalhes da An√°lise"):
                st.markdown("""
                **Metodologia:**
                - An√°lise sem√¢ntica do texto
                - Detec√ß√£o de palavras-chave suspeitas
                - Avalia√ß√£o de padr√µes de risco
                - Verifica√ß√£o de conformidade regulat√≥ria
                
                **Indicadores Analisados:**
                - Urg√™ncia/emerg√™ncia sem justificativa
                - Valores acima do mercado
                - Dispensa de licita√ß√£o
                - Prazos inadequados
                - Especifica√ß√µes direcionadas
                """)
        else:
            st.warning("‚ö†Ô∏è Por favor, insira um texto para an√°lise.")
    
    # Footer
    st.markdown("---")
    st.markdown("""
    <div style="text-align: center; color: #666; margin-top: 2rem;">
        <p>ü§ñ <strong>Cidad√£oGPT</strong> - Democratizando o Acesso √† Transpar√™ncia P√∫blica</p>
        <p>Desenvolvido com ‚ù§Ô∏è para fortalecer a democracia brasileira</p>
        <p>‚ö†Ô∏è <em>Vers√£o de demonstra√ß√£o - Resultados devem ser validados por especialistas</em></p>
    </div>
    """, unsafe_allow_html=True)

if __name__ == "__main__":
    main()