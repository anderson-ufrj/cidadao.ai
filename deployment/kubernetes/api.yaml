apiVersion: apps/v1
kind: Deployment
metadata:
  name: cidadao-api
  namespace: cidadao-ai
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cidadao-api
  template:
    metadata:
      labels:
        app: cidadao-api
    spec:
      initContainers:
      - name: wait-for-db
        image: busybox:1.35
        command:
        - sh
        - -c
        - until nc -z postgres-service 5432; do echo waiting for db; sleep 2; done;
      - name: wait-for-redis
        image: busybox:1.35
        command:
        - sh
        - -c
        - until nc -z redis-cluster 7000; do echo waiting for redis; sleep 2; done;
      containers:
      - name: api
        image: cidadao-ai:latest
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: cidadao-config
              key: ENVIRONMENT
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: cidadao-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: cidadao-config
              key: POSTGRES_PORT
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: cidadao-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: cidadao-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cidadao-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: cidadao-config
              key: REDIS_HOST
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cidadao-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: cidadao-secrets
              key: JWT_SECRET
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: cidadao-secrets
              key: GROQ_API_KEY
        - name: TRANSPARENCY_API_KEY
          valueFrom:
            secretKeyRef:
              name: cidadao-secrets
              key: TRANSPARENCY_API_KEY
        - name: RUN_MIGRATIONS
          value: "true"
        - name: INITIALIZE_SYSTEM
          value: "true"
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: models
          mountPath: /app/models
      volumes:
      - name: logs
        emptyDir: {}
      - name: models
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: cidadao-api-service
  namespace: cidadao-ai
spec:
  selector:
    app: cidadao-api
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cidadao-api-ingress
  namespace: cidadao-ai
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.cidadao.ai
    secretName: cidadao-api-tls
  rules:
  - host: api.cidadao.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cidadao-api-service
            port:
              number: 8000